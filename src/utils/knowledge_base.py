# -*- coding: utf-8 -*-
"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
"""
from enum import Enum
from typing import List, Dict, Any, Optional
from pathlib import Path


class KnowledgeBaseCategory(Enum):
    """–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"""
    FORMS = "forms"  # –§–æ—Ä–º—ã –¥–æ–≥–æ–≤–æ—Ä–æ–≤
    LEGAL = "legal"  # –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞
    CASE_LAW = "case_law"  # –°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞
    KEY_CASES = "key_cases"  # –ö–ª—é—á–µ–≤—ã–µ –∫–µ–π—Å—ã
    TRENDS = "trends"  # –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏


KNOWLEDGE_BASE_CONFIG = {
    KnowledgeBaseCategory.FORMS: {
        "name_ru": "–§–æ—Ä–º—ã –¥–æ–≥–æ–≤–æ—Ä–æ–≤",
        "description": "–¢–∏–ø–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –∏ —à–∞–±–ª–æ–Ω—ã –¥–æ–≥–æ–≤–æ—Ä–æ–≤",
        "collection_name": "contract_forms",
        "icon": "üìÑ",
        "priority": 1,
    },
    KnowledgeBaseCategory.LEGAL: {
        "name_ru": "–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞",
        "description": "–ì–ö –†–§, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–∫–æ–Ω—ã, –ø–æ–¥–∑–∞–∫–æ–Ω–Ω—ã–µ –∞–∫—Ç—ã",
        "collection_name": "legal_base",
        "icon": "‚öñÔ∏è",
        "priority": 2,
    },
    KnowledgeBaseCategory.CASE_LAW: {
        "name_ru": "–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞",
        "description": "–†–µ—à–µ–Ω–∏—è –í–° –†–§, –ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ü–ª–µ–Ω—É–º–∞, –æ–±–∑–æ—Ä—ã –ø—Ä–∞–∫—Ç–∏–∫–∏",
        "collection_name": "case_law",
        "icon": "üèõÔ∏è",
        "priority": 3,
    },
    KnowledgeBaseCategory.KEY_CASES: {
        "name_ru": "–ö–ª—é—á–µ–≤—ã–µ –∫–µ–π—Å—ã",
        "description": "–í–∞–∂–Ω—ã–µ –ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç—ã –∏ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è",
        "collection_name": "key_cases",
        "icon": "‚≠ê",
        "priority": 4,
    },
    KnowledgeBaseCategory.TRENDS: {
        "name_ru": "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏",
        "description": "–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –Ω–æ–≤—ã–µ –ø–æ–¥—Ö–æ–¥—ã",
        "collection_name": "trends",
        "icon": "üìà",
        "priority": 5,
    }
}


class KnowledgeBaseManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"""

    def __init__(self, data_dir: str = "./data/knowledge_base"):
        self.data_dir = Path(data_dir)
        self._ensure_directories()

    def _ensure_directories(self):
        """–°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        for category in KnowledgeBaseCategory:
            category_dir = self.data_dir / category.value
            category_dir.mkdir(parents=True, exist_ok=True)

    def get_category_info(self, category: KnowledgeBaseCategory) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        return KNOWLEDGE_BASE_CONFIG.get(category, {})

    def get_category_path(self, category: KnowledgeBaseCategory) -> Path:
        """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        return self.data_dir / category.value

    def list_documents(self, category: KnowledgeBaseCategory) -> List[Path]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        category_path = self.get_category_path(category)
        return list(category_path.glob("**/*.txt")) + list(category_path.glob("**/*.md"))

    def get_all_categories_info(self) -> List[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö"""
        categories = []
        for category in KnowledgeBaseCategory:
            info = self.get_category_info(category)
            doc_count = len(self.list_documents(category))
            categories.append({
                "category": category,
                "info": info,
                "document_count": doc_count
            })
        return sorted(categories, key=lambda x: x['info']['priority'])

    def search_in_category(
        self,
        category: KnowledgeBaseCategory,
        query: str,
        top_k: int = 5
    ) -> List[Dict[str, Any]]:
        """
        –ü–æ–∏—Å–∫ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å RAG —Å–∏—Å—Ç–µ–º–æ–π
        """
        # Placeholder –¥–ª—è –±—É–¥—É—â–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å RAG
        return []

    def search_all_categories(
        self,
        query: str,
        categories: Optional[List[KnowledgeBaseCategory]] = None,
        top_k: int = 10
    ) -> Dict[KnowledgeBaseCategory, List[Dict[str, Any]]]:
        """
        –ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º –∏–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        """
        if categories is None:
            categories = list(KnowledgeBaseCategory)

        results = {}
        for category in categories:
            category_results = self.search_in_category(category, query, top_k)
            if category_results:
                results[category] = category_results

        return results

    def add_document(
        self,
        category: KnowledgeBaseCategory,
        filename: str,
        content: str
    ) -> Path:
        """–î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π"""
        category_path = self.get_category_path(category)
        file_path = category_path / filename

        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)

        return file_path

    def get_category_statistics(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π"""
        stats = {}
        total_documents = 0

        for category in KnowledgeBaseCategory:
            doc_count = len(self.list_documents(category))
            total_documents += doc_count
            info = self.get_category_info(category)
            stats[category.value] = {
                "name": info.get("name_ru", ""),
                "count": doc_count,
                "icon": info.get("icon", "üìÑ")
            }

        stats["total"] = total_documents
        return stats


# –ì–æ—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
SAMPLE_DOCUMENTS = {
    KnowledgeBaseCategory.FORMS: [
        {
            "filename": "supply_agreement_template.txt",
            "content": """
–¢–∏–ø–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤–∫–∏

1. –ü–†–ï–î–ú–ï–¢ –î–û–ì–û–í–û–†–ê
–ü–æ—Å—Ç–∞–≤—â–∏–∫ –æ–±—è–∑—É–µ—Ç—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ü–æ–∫—É–ø–∞—Ç–µ–ª—è —Ç–æ–≤–∞—Ä, –∞ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ–±—è–∑—É–µ—Ç—Å—è –ø—Ä–∏–Ω—è—Ç—å —Ç–æ–≤–∞—Ä –∏ –æ–ø–ª–∞—Ç–∏—Ç—å –µ–≥–æ.

2. –ö–û–õ–ò–ß–ï–°–¢–í–û –ò –ê–°–°–û–†–¢–ò–ú–ï–ù–¢ –¢–û–í–ê–†–ê
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –¥–æ–≥–æ–≤–æ—Ä—É.

3. –ö–ê–ß–ï–°–¢–í–û –¢–û–í–ê–†–ê
–¢–æ–≤–∞—Ä –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ì–û–°–¢/–¢–£ –∏ –∏–º–µ—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è.

4. –¶–ï–ù–ê –ò –ü–û–†–Ø–î–û–ö –†–ê–°–ß–ï–¢–û–í
4.1. –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–µ–π.
4.2. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ ___ –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å—Ç–∞–≤–∫–∏.

5. –°–†–û–ö –ò –ü–û–†–Ø–î–û–ö –ü–û–°–¢–ê–í–ö–ò
5.1. –ü–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–∞—Ä—Ç–∏—è–º–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –≥—Ä–∞—Ñ–∏–∫—É –ø–æ—Å—Ç–∞–≤–∫–∏.
5.2. –ú–µ—Å—Ç–æ –ø–æ—Å—Ç–∞–≤–∫–∏: ___________.

6. –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨ –°–¢–û–†–û–ù
6.1. –ó–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–æ—Å—Ç–∞–≤–∫–∏ - –ø–µ–Ω—è 0.1% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–æ—Å—Ä–æ—á–∫–∏.
6.2. –ó–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É –æ–ø–ª–∞—Ç—ã - –ø–µ–Ω—è 0.1% –æ—Ç —Å—É–º–º—ã –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–æ—Å—Ä–æ—á–∫–∏.
"""
        }
    ],
    KnowledgeBaseCategory.LEGAL: [
        {
            "filename": "gk_rf_supply.txt",
            "content": """
–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å –†–§ - –ì–ª–∞–≤–∞ 30. –ö—É–ø–ª—è-–ø—Ä–æ–¥–∞–∂–∞
–ü–∞—Ä–∞–≥—Ä–∞—Ñ 3. –ü–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤

–°—Ç–∞—Ç—å—è 506. –î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏
–ü–æ –¥–æ–≥–æ–≤–æ—Ä—É –ø–æ—Å—Ç–∞–≤–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫-–ø—Ä–æ–¥–∞–≤–µ—Ü –æ–±—è–∑—É–µ—Ç—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ä–æ–∫ —Ç–æ–≤–∞—Ä—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.

–°—Ç–∞—Ç—å—è 509. –°—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
–ü–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Å—Ä–æ–∫–∏, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä–æ–º.

–°—Ç–∞—Ç—å—è 516. –û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤
–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞ –∏ —Ñ–æ—Ä–º—ã —Ä–∞—Å—á–µ—Ç–æ–≤, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–º.
"""
        }
    ]
}


def initialize_knowledge_base():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"""
    kb_manager = KnowledgeBaseManager()

    # –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    for category, documents in SAMPLE_DOCUMENTS.items():
        for doc in documents:
            try:
                kb_manager.add_document(
                    category,
                    doc["filename"],
                    doc["content"]
                )
            except Exception as e:
                print(f"Error adding document: {e}")

    return kb_manager
